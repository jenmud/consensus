schema:
  - graph/*.graphql


exec:
  layout: follow-schema
  dir: graph/generated
  package: generated


# model:
#   filename: graph/model/models_gen.go
#   package: model


resolver:
  layout: follow-schema
  dir: graph


# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - github.com/jenmud/consensus/ent


models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32

  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32

  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - github.com/jenmud/consensus/ent.Noder